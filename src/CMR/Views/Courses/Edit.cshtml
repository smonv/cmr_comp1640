@model CMR.ViewModels.FacultyCourseModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb">
    <li>
        <a href="@Url.Action("Index", "Home")">Home</a>
    </li>
    <li>
        <a href="@Url.Action("Index", "Courses")">Course</a>
    </li>
    <li class="active">Edit</li>
</ol>

<div class="panel panel-default">
    <div class="panel-heading">Edit</div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(m => m.Course.Id)

                <div class="form-group">
                    @Html.LabelFor(m => m.Course.Code, new {@class = "control-label"})
                    @Html.EditorFor(m => m.Course.Code, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(m => m.Course.Code, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Course.Name, new {@class = "control-label"})
                    @Html.EditorFor(m => m.Course.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(m => m.Course.Name, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Course.Description, new {@class = "control-label"})
                    @Html.TextAreaFor(m => m.Course.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Course.Description, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    Faculties
                    <div class="row">


                        <div class="col-md-10">
                            @{
                                var selectedFaculties = Model.Course.Faculties.Select(f => f.Id);
                                foreach (var f in Model.Faculties)
                                {
                                    <input type="checkbox" name="selectedFaculties" value="@f.Id" @Html.Raw(selectedFaculties.Contains(f.Id) ? "checked=\" checked\"" : "")/>
                                    @f.Name
                                    <br/>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary pull-right"/>
                    </div>
                </div>
            </div>
        }

    </div>
</div>